INTERLIS 
http://www.interlis.ch/oid/oid_e.php?
========
example of a possible application is the unequivocal labeling of baskets (cf. chapter 1 and 3 in the INTERLIS 2-reference manual).

At least within one transfer community an OID must be unique, unequivocal and unchangeable.
Amongst others, the following demands are made on the generation and the utilization of OID's:

    * Unequivocal, unique and unchangeable stable even with massive data collections
    * Independent of hardware and software producers
    * Platform independent
    * Serviceable for multi as well as individual users (e.g. also in field work)
    * Little space required and if need be still optimisable
    * Easy to implement

On principle, the uniqueness of an OID will always be achieved through a central mechanism.



Structure of an Object Identifier (OID)
---------------------------------------
An object identifier (OID) consists of a prefix and a postfix and has got a set length of 16 alphanumerical characters.
Thus the OID is divided into a part determined by a central authority and a decentral part, however it is always considered a unity.

Syntax rule:
OIDDef = Prefix Postfix. 

Prefixe
-------
The prefix is generated by a central authority. Thus uniqueness is guaranteed within a transfer community. 
Typically every basket (i.e. a data base process, which administers data of a concrete topic) demands a new prefix.
A prefix consists of 8 characters, the following symbols being admissible:

Syntax rule:
Prefix = Letter{Letter|Digit}. !! max. 8 characters
Letter = ('A'|..|'Z'|'a'|..|'z').
Digit = ('0'|'1'|..|'9').

A prefix is defined as a sequence of letters and digits, the first symbol having to be a letter (cf. also structure of XML-tag 
names or chapter 2.2.2 Name in the INTERLIS 2-reference manual). Thus 62 different varieties are available per character 
(0..9: ASCII 48 to 57; A..Z: ASCII 65 to 90; a..z: ASCII 97 to 122). The combining of 62 symbols with 10 characters results 
in a number which exceeds the probable exigencies of most of the applications at present conceivable.
Moreover, the first two prefix characters have been determined according to the country codes of ISO-Standard 3166 
(http://www.iso.ch). Thus the letters "CH" have been selected for all prefixes created in Switzerland etc.. 
It is the country where the prefix-creating process takes place that gives its code to the prefix. In most cases this 
process is not situated along with the producing system which creates the entire OID.
Once a prefix and the entire OID have been created they must never be altered again, even supposing for example 
that the country code would change.

Postfix
-------
A postfix is created by the data-producer, resp. the producing system itself. Just like the prefix it consists of 8 characters, however its domain is restricted: A postfix can only be composed of digits between 0 .. 99999999. In order to achieve an ASCII-compatible, column-oriented representation (data representation), the figure has to be right aligned and any available space on the left has to be filled with noughts ("0") (see also the first and third example of an OID below). Restricting a prefix to positive, whole numbers considerably facilitates implementation.
Syntax rule:
Postfix = {Digit}. !! max. 8 digits

Hence a postfix is a 8-digit number, starting with zero ("0") and the smallest possible number is depicted as "00000000" for the user. 